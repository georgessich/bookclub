"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ensureGraphQLError = exports.ensureError = exports.normalizeAndFormatErrors = void 0;
const graphql_1 = require("graphql");
const index_js_1 = require("./errors/index.js");
function normalizeAndFormatErrors(errors, options = {}) {
    const formatError = options.formatError ?? ((error) => error);
    return errors.map((error) => {
        try {
            return formatError(enrichError(error), error);
        }
        catch (formattingError) {
            if (options.includeStacktraceInErrorResponses) {
                return enrichError(formattingError);
            }
            else {
                return {
                    message: 'Internal server error',
                    extensions: { code: index_js_1.ApolloServerErrorCode.INTERNAL_SERVER_ERROR },
                };
            }
        }
    });
    function enrichError(maybeError) {
        const graphqlError = ensureGraphQLError(maybeError);
        const extensions = {
            ...graphqlError.extensions,
            code: graphqlError.extensions.code ??
                index_js_1.ApolloServerErrorCode.INTERNAL_SERVER_ERROR,
        };
        if (options.includeStacktraceInErrorResponses) {
            extensions.stacktrace = graphqlError.stack?.split('\n');
        }
        return { ...graphqlError.toJSON(), extensions };
    }
}
exports.normalizeAndFormatErrors = normalizeAndFormatErrors;
function ensureError(maybeError) {
    return maybeError instanceof Error
        ? maybeError
        : new graphql_1.GraphQLError('Unexpected error value: ' + String(maybeError));
}
exports.ensureError = ensureError;
function ensureGraphQLError(maybeError) {
    const error = ensureError(maybeError);
    return error instanceof graphql_1.GraphQLError
        ? error
        : new graphql_1.GraphQLError(error.message, { originalError: error });
}
exports.ensureGraphQLError = ensureGraphQLError;
//# sourceMappingURL=errorNormalize.js.map