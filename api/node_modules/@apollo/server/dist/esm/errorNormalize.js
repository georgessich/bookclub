import { GraphQLError, } from 'graphql';
import { ApolloServerErrorCode } from './errors/index.js';
export function normalizeAndFormatErrors(errors, options = {}) {
    const formatError = options.formatError ?? ((error) => error);
    return errors.map((error) => {
        try {
            return formatError(enrichError(error), error);
        }
        catch (formattingError) {
            if (options.includeStacktraceInErrorResponses) {
                return enrichError(formattingError);
            }
            else {
                return {
                    message: 'Internal server error',
                    extensions: { code: ApolloServerErrorCode.INTERNAL_SERVER_ERROR },
                };
            }
        }
    });
    function enrichError(maybeError) {
        const graphqlError = ensureGraphQLError(maybeError);
        const extensions = {
            ...graphqlError.extensions,
            code: graphqlError.extensions.code ??
                ApolloServerErrorCode.INTERNAL_SERVER_ERROR,
        };
        if (options.includeStacktraceInErrorResponses) {
            extensions.stacktrace = graphqlError.stack?.split('\n');
        }
        return { ...graphqlError.toJSON(), extensions };
    }
}
export function ensureError(maybeError) {
    return maybeError instanceof Error
        ? maybeError
        : new GraphQLError('Unexpected error value: ' + String(maybeError));
}
export function ensureGraphQLError(maybeError) {
    const error = ensureError(maybeError);
    return error instanceof GraphQLError
        ? error
        : new GraphQLError(error.message, { originalError: error });
}
//# sourceMappingURL=errorNormalize.js.map