import type { BaseContext, HTTPGraphQLHead, HTTPGraphQLRequest, HTTPGraphQLResponse } from './externalTypes';
import { ApolloServer, ApolloServerInternals, SchemaDerivedData } from './ApolloServer.js';
import { FormattedExecutionResult } from 'graphql';
export declare class HeaderMap extends Map<string, string> {
    set(key: string, value: string): this;
}
export declare const badMethodErrorMessage = "Apollo Server supports only GET/POST requests.";
export declare function runHttpQuery<TContext extends BaseContext>(server: ApolloServer<TContext>, httpRequest: HTTPGraphQLRequest, contextValue: TContext, schemaDerivedData: SchemaDerivedData, internals: ApolloServerInternals<TContext>): Promise<HTTPGraphQLResponse>;
export declare function prettyJSONStringify(value: FormattedExecutionResult): string;
export declare function cloneObject<T extends Object>(object: T): T;
export declare function newHTTPGraphQLHead(status?: number): HTTPGraphQLHead;
//# sourceMappingURL=runHttpQuery.d.ts.map